---
- name: Run commands as sudo
  hosts: "*"
  become: yes

  tasks:
    - name: Remove docker-compose
      apt:
        name: docker-compose
        state: absent

    - name: Download docker-compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.24.4/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create symlink for docker-compose
      file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link

    - name: Install Docker prerequisites
      apt:
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Set up the Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker Engine
      apt:
        name: docker-ce
        state: latest

    - name: Update apt and install gettext-base
      apt:
        update_cache: yes
        name: gettext-base
        state: present

    - name: Install NVIDIA drivers
      shell: |
        sudo add-apt-repository ppa:graphics-drivers/ppa -y &&
        sudo apt-get update &&
        sudo apt-get install -y nvidia-driver-510
      register: nvidia_driver_installed
      changed_when: "'installed' in nvidia_driver_installed.stdout"

    - name: Reboot host if NVIDIA driver installed
      reboot:
      when: nvidia_driver_installed.changed

    - name: Wait for host to come back online
      wait_for_connection:
        timeout: 300

    - name: Install CUDA toolkit
      shell: |
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.2.89-1_amd64.deb &&
        sudo dpkg -i cuda-repo-ubuntu1804_10.2.89-1_amd64.deb &&
        sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub &&
        sudo apt-get update &&
        sudo apt-get install -y cuda
      register: cuda_installed
      changed_when: "'installed' in cuda_installed.stdout"

    - name: Install NVIDIA Docker runtime
      shell: |
        distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \
          && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \
          && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list \
          && sudo apt-get update \
          && sudo apt-get install -y nvidia-docker2
      register: nvidia_docker_installed
      changed_when: "'installed' in nvidia_docker_installed.stdout"

    - name: Update Docker daemon.json for NVIDIA runtime
      copy:
        content: |
          {
            "runtimes": {
              "nvidia": {
                "path": "nvidia-container-runtime",
                "runtimeArgs": []
              }
            }
          }
        dest: /etc/docker/daemon.json
      notify: Restart Docker

    - name: Download docker-compose.yml
      get_url:
        url: https://raw.githubusercontent.com/jjziets/DCMontoring/main/client/docker-compose.yml-vast
        dest: /home/{{ ansible_user }}/docker-compose.yml

    - name: Download check-upgradable-packages.sh
      get_url:
        url: https://github.com/jjziets/gddr6_temps/raw/master/update-package-count.sh
        dest: /usr/local/bin/check-upgradable-packages.sh
        mode: '0755'

    - name: Add cron job for check-upgradable-packages.sh
      cron:
        name: "Check upgradable packages"
        minute: "0"
        hour: "*"
        job: "/usr/local/bin/check-upgradable-packages.sh"

    - name: Pull docker-compose images
      command: docker-compose pull
      args:
        chdir: /home/{{ ansible_user }}

    - name: Update and run docker-compose
      shell: |
        sed "s/HOST_HOSTNAME/$(hostname)/g" docker-compose.yml | docker-compose -f - up -d
      args:
        chdir: /home/{{ ansible_user }}

    - name: Download install_node_exporter.sh
      get_url:
        url: https://raw.githubusercontent.com/jjziets/DCMontoring/main/client/install_node_exporter.sh
        dest: /home/{{ ansible_user }}/install_node_exporter.sh
        mode: '0755'

    - name: Run install_node_exporter.sh
      command: ./install_node_exporter.sh
      args:
        chdir: /home/{{ ansible_user }}

    - name: Download install_NvidiaDCGM_Exporter.sh
      get_url:
        url: https://raw.githubusercontent.com/jjziets/DCMontoring/main/client/install_NvidiaDCGM_Exporter.sh
        dest: /home/{{ ansible_user }}/install_NvidiaDCGM_Exporter.sh
        mode: '0755'

    - name: Run install_NvidiaDCGM_Exporter.sh
      command: ./install_NvidiaDCGM_Exporter.sh
      args:
        chdir: /home/{{ ansible_user }}

    - name: Download and setup gddr6-metrics-exporter
      shell: |
        wget -q -O /usr/local/bin/gddr6-metrics-exporter_supervisor_script.sh https://raw.githubusercontent.com/jjziets/gddr6_temps/master/gddr6-metrics-exporter_supervisor_script.sh &&
        chmod +x /usr/local/bin/gddr6-metrics-exporter_supervisor_script.sh &&
        wget -q -O /etc/systemd/system/gddr6-metrics-exporter.service https://raw.githubusercontent.com/jjziets/gddr6_temps/master/gddr6-metrics-exporter.service &&
        systemctl daemon-reload &&
        systemctl enable gddr6-metrics-exporter &&
        systemctl start gddr6-metrics-exporter

  handlers:
    - name: Restart Docker
      service:
        name: docker
        state: restarted
